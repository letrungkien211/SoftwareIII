<launch>
  <arg name="playbag" default="false" />
  <arg name="run_roseus" default="true" />
  <arg name="run_rviz" default="true" />

  <node if="$(arg run_rviz)"
        pkg="rviz" type="rviz" name="rviz"
        args="-d $(find roseus_tutorials)/launch/tabletop-object-detector.vcg" />

  <node if="$(arg run_roseus)"
        pkg="roseus" type="roseus" name="eus_tabletop_detector"
        args="&quot;$(find roseus_tutorials)/src/tabletop-object-detector.l&quot;" />

  <node if="$(arg playbag)"
        pkg="rosbag" type="play" name="tabletop_bag_play"
        args="-r 0.2 $(find roseus_tutorials)/tabletop_points.bag" />

  <!-- copy from tabletop_object_detector/launch/tabletop_segmentation.launch -->
  <!-- arg name="tabletop_segmentation_points_in" default="narrow_stereo_textured/points2" / -->
  <arg name="tabletop_segmentation_points_in" default="/openni/depth_registered/points_throttle" />

  <arg name="tabletop_segmentation_convert_to_base_link" value="false" />
  <arg name="tabletop_segmentation_clustering_voxel_size" default="0.003" />
  <arg name="flatten_table" default="false"/>
  <arg name="table_padding" default="0.02"/>

  <node pkg="tabletop_object_detector" name="tabletop_segmentation" type="tabletop_segmentation" respawn="true" output="screen">
    <!--topic remapping-->
    <remap from="cloud_in" to="$(arg tabletop_segmentation_points_in)" />
    <remap from="segmentation_srv" to="tabletop_segmentation" />
    <remap from="markers_out" to="tabletop_segmentation_markers" />

    <param name="clustering_voxel_size" value="$(arg tabletop_segmentation_clustering_voxel_size)" />
    <param name="inlier_threshold" value="300" />
    <param name="plane_detection_voxel_size" value="0.01" />
    <param name="cluster_distance" value="0.03" />
    <param name="min_cluster_size" value="300" />
    <param name="flatten_table" value="$(arg flatten_table)" />
    <param name="table_padding" value="$(arg table_padding)" />

    <!-- processing and filtering frame -->
    <!-- all clouds converted to and processed in base link frame -->
    <param if="$(arg tabletop_segmentation_convert_to_base_link)" name="processing_frame" value="base_link" />
    <param if="$(arg tabletop_segmentation_convert_to_base_link)" name="up_direction" value="1.0" />
    <param if="$(arg tabletop_segmentation_convert_to_base_link)" name="z_filter_min" value="0.35" />
    <!-- param if="$(arg tabletop_segmentation_convert_to_base_link)" name="z_filter_max" value="1.0" / -->
    <param if="$(arg tabletop_segmentation_convert_to_base_link)" name="z_filter_max" value="2.0" />
    <param if="$(arg tabletop_segmentation_convert_to_base_link)" name="y_filter_min" value="-1.2" />
    <param if="$(arg tabletop_segmentation_convert_to_base_link)" name="y_filter_max" value="1.2" />
    <param if="$(arg tabletop_segmentation_convert_to_base_link)" name="x_filter_min" value="0.3" />
    <param if="$(arg tabletop_segmentation_convert_to_base_link)" name="x_filter_max" value="1.5" />
    <param if="$(arg tabletop_segmentation_convert_to_base_link)" name="table_z_filter_min" value="-0.5" />
    <param if="$(arg tabletop_segmentation_convert_to_base_link)" name="table_z_filter_max" value="-0.01" />		

    <!-- all clouds will be processed in the incoming frame, which is -->
    <!-- assumed to the the camera's optical frame -->
    <param unless="$(arg tabletop_segmentation_convert_to_base_link)" name="processing_frame" value="" />
    <param unless="$(arg tabletop_segmentation_convert_to_base_link)" name="up_direction" value="-1.0" />
    <param unless="$(arg tabletop_segmentation_convert_to_base_link)" name="z_filter_min" value="0.4" />
    <param unless="$(arg tabletop_segmentation_convert_to_base_link)" name="z_filter_max" value="1.25" />
    <param unless="$(arg tabletop_segmentation_convert_to_base_link)" name="y_filter_min" value="-1.2" />
    <param unless="$(arg tabletop_segmentation_convert_to_base_link)" name="y_filter_max" value="1.2" />
    <param unless="$(arg tabletop_segmentation_convert_to_base_link)" name="x_filter_min" value="-1.2" />
    <param unless="$(arg tabletop_segmentation_convert_to_base_link)" name="x_filter_max" value="1.2" />
    <param unless="$(arg tabletop_segmentation_convert_to_base_link)" name="table_z_filter_min" value="0.01" />
    <param unless="$(arg tabletop_segmentation_convert_to_base_link)" name="table_z_filter_max" value="0.5" />			

  </node>

  <sphinxdoc><![CDATA[
This script starts table top dector program

.. code-block:: bash

  roslaunch roseus_tutorials kinect.launch
  roslaunch roseus_tutorials tabletop-object-detector.launch
  rosrun roseus_tutorials tabletop-object-detector.l

  ]]></sphinxdoc>

</launch>
