(load "robot-client.l")
(load "../../driver/joystick/joydirect.l")

(defun init-joystick ()
  (connect-robot-server)
  (send *rs* :arm-poweron-vector #f(1 1 1 1 1))
  )
;;
;; pose-vector
;; アームのangle-vectorは動作させる前に問題がないか確認すること
(setq *hook-pose* #f(0 20 -20 90 -40))
(setq *grasp-pose* #f(0 20 -20 90 -80))
(setq *neutral-pose* #f(0 0 0 90 -40))

(defun start-joystick-control ()
  ;; setup joypad
  (joyInit)
  (joyUpdate)
  ;; main loop
  (format t "Start joystick control loop~%")
  (do-until-key
   (let* ((st (joyGetState))
          (axis (cdr (assoc :arrow1 st)))
          (btn (cdr (assoc :button st))))
     ;; ボタンの同時押しを考慮していない
     (format t "axis:~a btn:~a~%" axis btn)
     (print axis)
     (cond
      ((> (elt axis 0) 0.0)
       (print "move right")
       (send *rs* :daisya-velocity-vector #f(0 -500 0)))
      ((< (elt axis 0) 0.0)
       (print "move left")
       (send *rs* :daisya-velocity-vector #f(0 500 0)))
      ((> (elt axis 1) 0.0)
       (print "move forward")
       (send *rs* :daisya-velocity-vector #f(500 0 0)))
      ((< (elt axis 1) 0.0)
       (print "move backward")
       (send *rs* :daisya-velocity-vector #f(-500 0 0)))
      ((member 7 btn) ;; left turn (button 8)
       (print "turn left")
       (send *rs* :daisya-velocity-vector #f(0 0 200)))
      ((member 8 btn) ;; right turn (button 7)
       (print "turn right")
       (send *rs* :daisya-velocity-vector #f(0 0 -200)))
      ((member 1 btn) ;; hook-pose (button 1)
       (print "move arm to hook-pose")
       (send *rs* :arm-angle-vector *hook-pose* 1500)
       (unix:usleep (* 1500 1000))
       )
      ((member 2 btn) ;; grasp (button 2)
       (print "move arm to grasp-pose")
       (send *rs* :arm-angle-vector *grasp-pose* 1000)
       (unix:usleep (* 1000 1000))
       )
      ((member 3 btn) ;; neutral (button 3)
       (print "move arm to neutral-pose")
       (send *rs* :arm-angle-vector *neutral-pose* 1000)
       (unix:usleep (* 1000 1000))
       )
      (t
       (send *rs* :daisya-velocity-vector #f(0 0 0))
       ))
     )
   )
  (send *rs* :arm-poweron-vector #f(0 0 0 0 0))
  ;; destruct joypad
  (joyRumbleMagnitude 0)
  (joyQuit)
  )

(pprint "(init-joystick)")
(pprint "(start-joystick-control)")
